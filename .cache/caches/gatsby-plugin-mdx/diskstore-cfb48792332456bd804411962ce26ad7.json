{"expireTime":9007200859437879000,"key":"gatsby-plugin-mdx-entire-payload-ac5a99087b9245ea0b18f62193ffe21f-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A mobile app built by 4 middle students and lead by me.\nYou control a monkey to eat bananas while solving math equations and avoiding getting hit by bad bananas.\nThe purpose of this game was to strengthen math and multi-tasking skills, and of course, to develop\na love for bananas!","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":20,"offset":282},"indent":[1,1,1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":5,"column":20,"offset":282},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Monkey Mania\",\"category\":\"Student project\",\"emoji\":\"üë®‚Äçüíª\",\"screenshot\":\"./screenshot.png\",\"github\":\"\",\"external\":\"\",\"tags\":[\"App Development\",\"MIT App Inventor\"],\"visible\":\"true\",\"position\":2}","position":{"start":{"line":8,"column":1,"offset":285},"end":{"line":8,"column":232,"offset":516},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":8,"column":232,"offset":516}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Monkey Mania\",\n  \"category\": \"Student project\",\n  \"emoji\": \"üë®‚Äçüíª\",\n  \"screenshot\": \"./screenshot.png\",\n  \"github\": \"\",\n  \"external\": \"\",\n  \"tags\": [\"App Development\", \"MIT App Inventor\"],\n  \"visible\": \"true\",\n  \"position\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A mobile app built by 4 middle students and lead by me.\\nYou control a monkey to eat bananas while solving math equations and avoiding getting hit by bad bananas.\\nThe purpose of this game was to strengthen math and multi-tasking skills, and of course, to develop\\na love for bananas!\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Monkey Mania\",\n  \"category\": \"Student project\",\n  \"emoji\": \"üë®‚Äçüíª\",\n  \"screenshot\": \"./screenshot.png\",\n  \"github\": \"\",\n  \"external\": \"\",\n  \"tags\": [\"App Development\", \"MIT App Inventor\"],\n  \"visible\": \"true\",\n  \"position\": 2\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`A mobile app built by 4 middle students and lead by me.\nYou control a monkey to eat bananas while solving math equations and avoiding getting hit by bad bananas.\nThe purpose of this game was to strengthen math and multi-tasking skills, and of course, to develop\na love for bananas!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}